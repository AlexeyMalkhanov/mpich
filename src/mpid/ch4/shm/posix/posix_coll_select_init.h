#ifndef POSIX_COLL_SELECT_INIT_H_INCLUDED
#define POSIX_COLL_SELECT_INIT_H_INCLUDED

#include "posix_coll_select_utils.h"
#include "coll_tree_bin_types.h"

#undef FUNCNAME
#define FUNCNAME MPIDI_POSIX_mpi_comm_collective_selection_finalize
#undef FCNAME
#define FCNAME MPL_QUOTE(FUNCNAME)
MPL_STATIC_INLINE_PREFIX int MPIDI_POSIX_mpi_comm_collective_selection_init(MPIR_Comm * comm)
{
    int mpi_errno = MPI_SUCCESS;

    MPIR_FUNC_VERBOSE_STATE_DECL(MPID_STATE_MPIDI_POSIX_COMM_COLLECTIVE_SELECTION_INIT);
    MPIR_FUNC_VERBOSE_ENTER(MPID_STATE_MPIDI_COMM_POSIX_COLLECTIVE_SELECTION_INIT);

    MPIR_FUNC_VERBOSE_EXIT(MPID_STATE_MPIDI_COMM_POSIX_COLLECTIVE_SELECTION_INIT);
    return mpi_errno;
}

#undef FUNCNAME
#define FUNCNAME MPIDI_POSIX_mpi_comm_collective_selection_finalize
#undef FCNAME
#define FCNAME MPL_QUOTE(FUNCNAME)
MPL_STATIC_INLINE_PREFIX int MPIDI_POSIX_mpi_comm_collective_selection_finalize(MPIR_Comm * comm)
{
    int mpi_errno = MPI_SUCCESS;

    MPIR_FUNC_VERBOSE_STATE_DECL(MPID_STATE_MPIDI_POSIX_COMM_COLLECTIVE_SELECTION_FINALIZE);
    MPIR_FUNC_VERBOSE_ENTER(MPID_STATE_MPIDI_COMM_POSIX_COLLECTIVE_SELECTION_FINALIZE);

    MPIR_FUNC_VERBOSE_EXIT(MPID_STATE_MPIDI_COMM_POSIX_COLLECTIVE_SELECTION_FINALIZE);
    return mpi_errno;
}

#endif /* POSIX_COLL_SELECT_INIT_H_INCLUDED */
